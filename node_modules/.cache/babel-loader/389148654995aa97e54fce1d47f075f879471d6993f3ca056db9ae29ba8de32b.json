{"ast":null,"code":"var _jsxFileName = \"/home/pedroviana/extra/interviewChallenger-1/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [undid, setUndid] = useState([]);\n  const handleClick = e => {\n    const newDot = {\n      clientX: e.clientX,\n      clientY: e.clientY\n    };\n\n    // console.log(newDot); - Here I am checking to see if I can get clientX and clientY\n\n    setList(prev => [...prev, newDot]);\n  };\n  const handleUndo = e => {\n    e.stopPropagation();\n    console.log('undo');\n    // I used stopPropagation to stop the creation of the points on the button\n\n    if (list.length === 0) {\n      return;\n    }\n    const undidDot = list[list.length - 1];\n    setUndid(prev => [...prev, undidDot]);\n    setList(prev => {\n      const newArray = [...prev].slice(0, -1);\n      return newArray;\n    });\n  };\n  const handleRedo = e => {\n    e.stopPropagation();\n    console.log('redo');\n    const undidDot = undid[undid.length - 1];\n    setUndid(prev => {\n      const newArray = [...prev].slice(0, -1);\n      return newArray;\n    });\n    setList(prev => [...prev, undidDot]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUndo,\n      children: \"Undo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRedo,\n      children: \"Redo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), list.map(dot => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dot\",\n      style: {\n        left: dot.clientX,\n        top: dot.clientY\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R2e+HFbwUTx6ginARET6/48pof8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","list","setList","undid","setUndid","handleClick","e","newDot","clientX","clientY","prev","handleUndo","stopPropagation","console","log","length","undidDot","newArray","slice","handleRedo","map","dot","left","top"],"sources":["/home/pedroviana/extra/interviewChallenger-1/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const [undid, setUndid] = useState([]);\n\n  const handleClick = (e) => {\n    \n    const newDot = {\n      clientX: e.clientX,\n      clientY: e.clientY,\n    }\n\n    // console.log(newDot); - Here I am checking to see if I can get clientX and clientY\n\n    setList((prev) => [...prev, newDot]);\n  }\n\n  const handleUndo = (e) => {\n    e.stopPropagation();\n    console.log('undo');\n    // I used stopPropagation to stop the creation of the points on the button\n\n    if(list.length === 0){\n      return;\n    }\n\n    const undidDot = list[list.length - 1];\n    setUndid((prev => [...prev, undidDot]));\n\n    setList((prev) => {\n      const newArray = [...prev].slice(0, -1);\n      return newArray;\n    })\n  }\n\n  const handleRedo = (e) => {\n    e.stopPropagation();\n    console.log('redo')\n\n    const undidDot = undid[undid.length - 1];\n    setUndid((prev) => {\n      const newArray = [...prev].slice(0, -1);\n      return newArray;\n    })\n    setList((prev) => [...prev, undidDot]);\n  }\n\n  return (\n    <div id='page' onClick={ handleClick }>\n      <button onClick={ handleUndo }> \n        Undo\n      </button>\n      <button onClick={ handleRedo }>\n        Redo\n      </button>\n      {list.map((dot) => (\n        <div className='dot' style={{ left: dot.clientX, top: dot.clientY }} />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMM,WAAW,GAAIC,CAAC,IAAK;IAEzB,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAEF,CAAC,CAACE,OAAO;MAClBC,OAAO,EAAEH,CAAC,CAACG;IACb,CAAC;;IAED;;IAEAP,OAAO,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,MAAM,CAAC,CAAC;EACtC,CAAC;EAED,MAAMI,UAAU,GAAIL,CAAC,IAAK;IACxBA,CAAC,CAACM,eAAe,EAAE;IACnBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB;;IAEA,IAAGb,IAAI,CAACc,MAAM,KAAK,CAAC,EAAC;MACnB;IACF;IAEA,MAAMC,QAAQ,GAAGf,IAAI,CAACA,IAAI,CAACc,MAAM,GAAG,CAAC,CAAC;IACtCX,QAAQ,CAAEM,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEM,QAAQ,CAAC,CAAE;IAEvCd,OAAO,CAAEQ,IAAI,IAAK;MAChB,MAAMO,QAAQ,GAAG,CAAC,GAAGP,IAAI,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACvC,OAAOD,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,UAAU,GAAIb,CAAC,IAAK;IACxBA,CAAC,CAACM,eAAe,EAAE;IACnBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IAEnB,MAAME,QAAQ,GAAGb,KAAK,CAACA,KAAK,CAACY,MAAM,GAAG,CAAC,CAAC;IACxCX,QAAQ,CAAEM,IAAI,IAAK;MACjB,MAAMO,QAAQ,GAAG,CAAC,GAAGP,IAAI,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACvC,OAAOD,QAAQ;IACjB,CAAC,CAAC;IACFf,OAAO,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEM,QAAQ,CAAC,CAAC;EACxC,CAAC;EAED,oBACE;IAAK,EAAE,EAAC,MAAM;IAAC,OAAO,EAAGX,WAAa;IAAA,wBACpC;MAAQ,OAAO,EAAGM,UAAY;MAAA,UAAC;IAE/B;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAGQ,UAAY;MAAA,UAAC;IAE/B;MAAA;MAAA;MAAA;IAAA,QAAS,EACRlB,IAAI,CAACmB,GAAG,CAAEC,GAAG,iBACZ;MAAK,SAAS,EAAC,KAAK;MAAC,KAAK,EAAE;QAAEC,IAAI,EAAED,GAAG,CAACb,OAAO;QAAEe,GAAG,EAAEF,GAAG,CAACZ;MAAQ;IAAE;MAAA;MAAA;MAAA;IAAA,QACrE,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA3DQT,GAAG;AAAA,KAAHA,GAAG;AA6DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}